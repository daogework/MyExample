// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: CLGT.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CLGT {

  /// <summary>Holder for reflection information generated from CLGT.proto</summary>
  public static partial class CLGTReflection {

    #region Descriptor
    /// <summary>File descriptor for CLGT.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CLGTReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpDTEdULnByb3RvEgRDTEdUIoEBCgdIYW5kUmVxEhAKCHBsYXRmb3JtGAEg",
            "ASgFEg8KB3Byb2R1Y3QYAiABKAUSDwoHdmVyc2lvbhgDIAEoBRIOCgZkZXZp",
            "Y2UYBCABKAkSDwoHY2hhbm5lbBgFIAEoBRIPCgdjb3VudHJ5GAYgASgJEhAK",
            "CGxhbmd1YWdlGAcgASgJIm0KB0hhbmRBY2sSDwoHZXJyY29kZRgBIAEoBRIP",
            "CgdwYXlsb2FkGAIgASgFEhIKCnJhbmRvbV9rZXkYAyABKAwSFgoOcmFuZG9t",
            "X2tleV9hcnIYBCADKAUSFAoMc2Vzc2lvbl9ndWlkGAUgASgJIjEKDURpc2Nv",
            "bm5lY3ROdGYSDAoEY29kZRgBIAEoBRISCgplcnJtZXNzYWdlGAIgASgJIkQK",
            "CEl0ZW1JbmZvEg8KB2l0ZW1faWQYASABKAUSEwoLaXRlbV9zdWJfaWQYAiAB",
            "KAUSEgoKaXRlbV9jb3VudBgDIAEoAyJMChBMb2JieVZlcnNpb25JbmZvEg8K",
            "B3ZlcnNpb24YASABKAUSDAoEbmFtZRgCIAEoCRIMCgRzaXplGAMgASgDEgsK",
            "A21kNRgEIAEoCSJICg9HYW1lVmVyc2lvbkluZm8SDAoEa2luZBgBIAEoCRIM",
            "CgRuYW1lGAIgASgJEgwKBHNpemUYAyABKAMSCwoDbWQ1GAQgASgJIhUKE0xv",
            "YmJ5Q2hlY2tVcGRhdGVSZXEisQEKE0xvYmJ5Q2hlY2tVcGRhdGVBY2sSDwoH",
            "ZXJyY29kZRgBIAEoBRIPCgdzdWNjZXNzGAIgASgIEg8KB3ZlcnNpb24YAyAB",
            "KAUSFAoMdmVyc2lvbl9uYW1lGAQgASgJEhQKDHZlcnNpb25fc2l6ZRgFIAEo",
            "AxITCgt2ZXJzaW9uX21kNRgGIAEoCRISCgp1cGRhdGVfdXJsGAcgASgJEhIK",
            "CnVwZGF0ZV9jbnQYCCABKAUiIgoSR2FtZUNoZWNrVXBkYXRlUmVxEgwKBGtp",
            "bmQYASABKAkiXAoSR2FtZUNoZWNrVXBkYXRlQWNrEg8KB2VycmNvZGUYASAB",
            "KAUSDAoEa2luZBgCIAEoBRIMCgRuYW1lGAMgASgJEgwKBHNpemUYBCABKAMS",
            "CwoDbWQ1GAUgASgJIi0KCExvZ2luUmVxEhIKCmxvZ2luX3R5cGUYASABKAUS",
            "DQoFdG9rZW4YAiABKAkiowUKCExvZ2luQWNrEg8KB2VycmNvZGUYASABKAUS",
            "DwoHdXNlcl9pZBgCIAEoBRIQCghuaWNrbmFtZRgDIAEoCRIUCgxuaWNrbmFt",
            "ZV9tZGYYBCABKAgSDgoGZ2VuZGVyGAUgASgFEgwKBGhlYWQYBiABKAUSEgoK",
            "aGVhZF9mcmFtZRgHIAEoBRINCgVsZXZlbBgIIAEoBRIRCglsZXZlbF9leHAY",
            "CSABKAMSEQoJdmlwX2xldmVsGAogASgFEhUKDXZpcF9sZXZlbF9leHAYCyAB",
            "KAMSDQoFcGhvbmUYDCABKAkSDwoHZGlhbW9uZBgNIAEoAxIQCghjdXJyZW5j",
            "eRgOIAEoAxIdCgVpdGVtcxgRIAMoCzIOLkNMR1QuSXRlbUluZm8SGAoQc2Vy",
            "dmVyX3RpbWVzdGFtcBgSIAEoBxIXCg9oYXNfdW5yZWFkX21haWwYFCABKAgS",
            "HgoWbW9udGhfY2FyZF9leHBpcmVfdGltZRgXIAEoDRIeChZtb250aF9jYXJk",
            "X2hhc19mZXRjaGVkGBggASgIEhkKEWNsaWVudF9jb25maWdfbWQ1GBwgASgJ",
            "EhUKDW1heF9ndW5fdmFsdWUYHSABKAMSEwoLdGltZV9zdHJpbmcYHiABKAkS",
            "GgoSYmFua19wYXNzd29yZF9mbGFnGB8gASgIEhUKDWJhbmtfY3VycmVuY3kY",
            "KSABKAMSFAoMbGFzdF9nYW1lX2lkGCogASgFEhQKDGxhc3Rfcm9vbV9pZBgr",
            "IAEoBRIQCghoZWFkX3VybBgsIAEoCRIRCgltYXhfc3RhcnQYLSABKAUSGQoR",
            "YWdlbnRfc2VydmVyX2xpc3QYLiADKAkSFgoOZ2FtZV9raW5kX2xpc3QYLyAD",
            "KAUSDQoFc3RhdGUYMCABKAgiDgoMS2VlcEFsaXZlUmVxIh8KDEtlZXBBbGl2",
            "ZUFjaxIPCgdlcnJjb2RlGAEgASgFIhUKE1Rlc3ROZXRJbnRlcnJ1cHRScHRi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.HandReq), global::CLGT.HandReq.Parser, new[]{ "Platform", "Product", "Version", "Device", "Channel", "Country", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.HandAck), global::CLGT.HandAck.Parser, new[]{ "Errcode", "Payload", "RandomKey", "RandomKeyArr", "SessionGuid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.DisconnectNtf), global::CLGT.DisconnectNtf.Parser, new[]{ "Code", "Errmessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.ItemInfo), global::CLGT.ItemInfo.Parser, new[]{ "ItemId", "ItemSubId", "ItemCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.LobbyVersionInfo), global::CLGT.LobbyVersionInfo.Parser, new[]{ "Version", "Name", "Size", "Md5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.GameVersionInfo), global::CLGT.GameVersionInfo.Parser, new[]{ "Kind", "Name", "Size", "Md5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.LobbyCheckUpdateReq), global::CLGT.LobbyCheckUpdateReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.LobbyCheckUpdateAck), global::CLGT.LobbyCheckUpdateAck.Parser, new[]{ "Errcode", "Success", "Version", "VersionName", "VersionSize", "VersionMd5", "UpdateUrl", "UpdateCnt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.GameCheckUpdateReq), global::CLGT.GameCheckUpdateReq.Parser, new[]{ "Kind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.GameCheckUpdateAck), global::CLGT.GameCheckUpdateAck.Parser, new[]{ "Errcode", "Kind", "Name", "Size", "Md5" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.LoginReq), global::CLGT.LoginReq.Parser, new[]{ "LoginType", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.LoginAck), global::CLGT.LoginAck.Parser, new[]{ "Errcode", "UserId", "Nickname", "NicknameMdf", "Gender", "Head", "HeadFrame", "Level", "LevelExp", "VipLevel", "VipLevelExp", "Phone", "Diamond", "Currency", "Items", "ServerTimestamp", "HasUnreadMail", "MonthCardExpireTime", "MonthCardHasFetched", "ClientConfigMd5", "MaxGunValue", "TimeString", "BankPasswordFlag", "BankCurrency", "LastGameId", "LastRoomId", "HeadUrl", "MaxStart", "AgentServerList", "GameKindList", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.KeepAliveReq), global::CLGT.KeepAliveReq.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.KeepAliveAck), global::CLGT.KeepAliveAck.Parser, new[]{ "Errcode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CLGT.TestNetInterruptRpt), global::CLGT.TestNetInterruptRpt.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///握手请求
  /// </summary>
  public sealed partial class HandReq : pb::IMessage<HandReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandReq> _parser = new pb::MessageParser<HandReq>(() => new HandReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandReq(HandReq other) : this() {
      platform_ = other.platform_;
      product_ = other.product_;
      version_ = other.version_;
      device_ = other.device_;
      channel_ = other.channel_;
      country_ = other.country_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandReq Clone() {
      return new HandReq(this);
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 1;
    private int platform_;
    /// <summary>
    ///运行平台 0未知 1IOS 2ANDROID 3WINDOWS 4LINUX 5MAC 6WebGL
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Platform {
      get { return platform_; }
      set {
        platform_ = value;
      }
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 2;
    private int product_;
    /// <summary>
    ///产品代号 0:未知的产品 1:游戏平台
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    ///产品版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "device" field.</summary>
    public const int DeviceFieldNumber = 4;
    private string device_ = "";
    /// <summary>
    ///机器设备码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Device {
      get { return device_; }
      set {
        device_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 5;
    private int channel_;
    /// <summary>
    ///渠道 0未知 1官方 2苹果 3华为 4OPPO 5VIVO 6小米 7应用宝 8百度 9快手 10抖音
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Channel {
      get { return channel_; }
      set {
        channel_ = value;
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 6;
    private string country_ = "";
    /// <summary>
    ///国家标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 7;
    private string language_ = "";
    /// <summary>
    ///语言标识
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Platform != other.Platform) return false;
      if (Product != other.Product) return false;
      if (Version != other.Version) return false;
      if (Device != other.Device) return false;
      if (Channel != other.Channel) return false;
      if (Country != other.Country) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Platform != 0) hash ^= Platform.GetHashCode();
      if (Product != 0) hash ^= Product.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Device.Length != 0) hash ^= Device.GetHashCode();
      if (Channel != 0) hash ^= Channel.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Platform != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Platform);
      }
      if (Product != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Product);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (Device.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Device);
      }
      if (Channel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Channel);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Platform != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Platform);
      }
      if (Product != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Product);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (Device.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Device);
      }
      if (Channel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Channel);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Country);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Platform != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Platform);
      }
      if (Product != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Product);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Device.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Device);
      }
      if (Channel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Channel);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandReq other) {
      if (other == null) {
        return;
      }
      if (other.Platform != 0) {
        Platform = other.Platform;
      }
      if (other.Product != 0) {
        Product = other.Product;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Device.Length != 0) {
        Device = other.Device;
      }
      if (other.Channel != 0) {
        Channel = other.Channel;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Platform = input.ReadInt32();
            break;
          }
          case 16: {
            Product = input.ReadInt32();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            Device = input.ReadString();
            break;
          }
          case 40: {
            Channel = input.ReadInt32();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Platform = input.ReadInt32();
            break;
          }
          case 16: {
            Product = input.ReadInt32();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            Device = input.ReadString();
            break;
          }
          case 40: {
            Channel = input.ReadInt32();
            break;
          }
          case 50: {
            Country = input.ReadString();
            break;
          }
          case 58: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///握手回应
  /// </summary>
  public sealed partial class HandAck : pb::IMessage<HandAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HandAck> _parser = new pb::MessageParser<HandAck>(() => new HandAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HandAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandAck(HandAck other) : this() {
      errcode_ = other.errcode_;
      payload_ = other.payload_;
      randomKey_ = other.randomKey_;
      randomKeyArr_ = other.randomKeyArr_.Clone();
      sessionGuid_ = other.sessionGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HandAck Clone() {
      return new HandAck(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    /// <summary>
    ///0成功 1无法识别的平台 2无法识别的产品 3版本太老需强更 4拒绝访问 5你的IP已被封禁 6你的设备已被封禁
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private int payload_;
    /// <summary>
    ///当前网关负载
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "random_key" field.</summary>
    public const int RandomKeyFieldNumber = 3;
    private pb::ByteString randomKey_ = pb::ByteString.Empty;
    /// <summary>
    ///随机秘钥数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RandomKey {
      get { return randomKey_; }
      set {
        randomKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "random_key_arr" field.</summary>
    public const int RandomKeyArrFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_randomKeyArr_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> randomKeyArr_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> RandomKeyArr {
      get { return randomKeyArr_; }
    }

    /// <summary>Field number for the "session_guid" field.</summary>
    public const int SessionGuidFieldNumber = 5;
    private string sessionGuid_ = "";
    /// <summary>
    ///当前会话Guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionGuid {
      get { return sessionGuid_; }
      set {
        sessionGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HandAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HandAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      if (Payload != other.Payload) return false;
      if (RandomKey != other.RandomKey) return false;
      if(!randomKeyArr_.Equals(other.randomKeyArr_)) return false;
      if (SessionGuid != other.SessionGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (Payload != 0) hash ^= Payload.GetHashCode();
      if (RandomKey.Length != 0) hash ^= RandomKey.GetHashCode();
      hash ^= randomKeyArr_.GetHashCode();
      if (SessionGuid.Length != 0) hash ^= SessionGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Payload != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Payload);
      }
      if (RandomKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(RandomKey);
      }
      randomKeyArr_.WriteTo(output, _repeated_randomKeyArr_codec);
      if (SessionGuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Payload != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Payload);
      }
      if (RandomKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(RandomKey);
      }
      randomKeyArr_.WriteTo(ref output, _repeated_randomKeyArr_codec);
      if (SessionGuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SessionGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (Payload != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Payload);
      }
      if (RandomKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RandomKey);
      }
      size += randomKeyArr_.CalculateSize(_repeated_randomKeyArr_codec);
      if (SessionGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HandAck other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      if (other.Payload != 0) {
        Payload = other.Payload;
      }
      if (other.RandomKey.Length != 0) {
        RandomKey = other.RandomKey;
      }
      randomKeyArr_.Add(other.randomKeyArr_);
      if (other.SessionGuid.Length != 0) {
        SessionGuid = other.SessionGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Payload = input.ReadInt32();
            break;
          }
          case 26: {
            RandomKey = input.ReadBytes();
            break;
          }
          case 34:
          case 32: {
            randomKeyArr_.AddEntriesFrom(input, _repeated_randomKeyArr_codec);
            break;
          }
          case 42: {
            SessionGuid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Payload = input.ReadInt32();
            break;
          }
          case 26: {
            RandomKey = input.ReadBytes();
            break;
          }
          case 34:
          case 32: {
            randomKeyArr_.AddEntriesFrom(ref input, _repeated_randomKeyArr_codec);
            break;
          }
          case 42: {
            SessionGuid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///网络中断通知
  /// </summary>
  public sealed partial class DisconnectNtf : pb::IMessage<DisconnectNtf>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DisconnectNtf> _parser = new pb::MessageParser<DisconnectNtf>(() => new DisconnectNtf());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectNtf> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectNtf() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectNtf(DisconnectNtf other) : this() {
      code_ = other.code_;
      errmessage_ = other.errmessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectNtf Clone() {
      return new DisconnectNtf(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    /// <summary>
    ///0断开通知 1连接超时 2被踢下线 3被挤下线 4网关维护 5平台维护 6游戏维护 7与平台服务器断开连接 8与游戏服务器断开连接 9系统错误
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "errmessage" field.</summary>
    public const int ErrmessageFieldNumber = 2;
    private string errmessage_ = "";
    /// <summary>
    ///附加错误信息，目前是当错误码为9时该字段有效
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Errmessage {
      get { return errmessage_; }
      set {
        errmessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectNtf);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectNtf other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Errmessage != other.Errmessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Errmessage.Length != 0) hash ^= Errmessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Errmessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Errmessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Errmessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Errmessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Errmessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Errmessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectNtf other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Errmessage.Length != 0) {
        Errmessage = other.Errmessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Errmessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Errmessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///物品信息结构 STRUCT!!
  /// </summary>
  public sealed partial class ItemInfo : pb::IMessage<ItemInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ItemInfo> _parser = new pb::MessageParser<ItemInfo>(() => new ItemInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo(ItemInfo other) : this() {
      itemId_ = other.itemId_;
      itemSubId_ = other.itemSubId_;
      itemCount_ = other.itemCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemInfo Clone() {
      return new ItemInfo(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private int itemId_;
    /// <summary>
    ///物品主类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "item_sub_id" field.</summary>
    public const int ItemSubIdFieldNumber = 2;
    private int itemSubId_;
    /// <summary>
    ///物品子类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemSubId {
      get { return itemSubId_; }
      set {
        itemSubId_ = value;
      }
    }

    /// <summary>Field number for the "item_count" field.</summary>
    public const int ItemCountFieldNumber = 3;
    private long itemCount_;
    /// <summary>
    ///物品数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemSubId != other.ItemSubId) return false;
      if (ItemCount != other.ItemCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemSubId != 0) hash ^= ItemSubId.GetHashCode();
      if (ItemCount != 0L) hash ^= ItemCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (ItemSubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemSubId);
      }
      if (ItemCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ItemId);
      }
      if (ItemSubId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemSubId);
      }
      if (ItemCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemId);
      }
      if (ItemSubId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemSubId);
      }
      if (ItemCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemInfo other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemSubId != 0) {
        ItemSubId = other.ItemSubId;
      }
      if (other.ItemCount != 0L) {
        ItemCount = other.ItemCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemSubId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt32();
            break;
          }
          case 16: {
            ItemSubId = input.ReadInt32();
            break;
          }
          case 24: {
            ItemCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///大厅信息结构 STRUCT!!
  /// </summary>
  public sealed partial class LobbyVersionInfo : pb::IMessage<LobbyVersionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyVersionInfo> _parser = new pb::MessageParser<LobbyVersionInfo>(() => new LobbyVersionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyVersionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyVersionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyVersionInfo(LobbyVersionInfo other) : this() {
      version_ = other.version_;
      name_ = other.name_;
      size_ = other.size_;
      md5_ = other.md5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyVersionInfo Clone() {
      return new LobbyVersionInfo(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    /// <summary>
    ///版本号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///版本名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private long size_;
    /// <summary>
    ///版本大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "md5" field.</summary>
    public const int Md5FieldNumber = 4;
    private string md5_ = "";
    /// <summary>
    ///校验码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Md5 {
      get { return md5_; }
      set {
        md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyVersionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyVersionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Name != other.Name) return false;
      if (Size != other.Size) return false;
      if (Md5 != other.Md5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (Md5.Length != 0) hash ^= Md5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (Md5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Md5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyVersionInfo other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.Md5.Length != 0) {
        Md5 = other.Md5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///游戏信息结构 STRUCT!!
  /// </summary>
  public sealed partial class GameVersionInfo : pb::IMessage<GameVersionInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameVersionInfo> _parser = new pb::MessageParser<GameVersionInfo>(() => new GameVersionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameVersionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameVersionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameVersionInfo(GameVersionInfo other) : this() {
      kind_ = other.kind_;
      name_ = other.name_;
      size_ = other.size_;
      md5_ = other.md5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameVersionInfo Clone() {
      return new GameVersionInfo(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///版本名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 3;
    private long size_;
    /// <summary>
    ///版本大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "md5" field.</summary>
    public const int Md5FieldNumber = 4;
    private string md5_ = "";
    /// <summary>
    ///校验码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Md5 {
      get { return md5_; }
      set {
        md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameVersionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameVersionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (Name != other.Name) return false;
      if (Size != other.Size) return false;
      if (Md5 != other.Md5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (Md5.Length != 0) hash ^= Md5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (Md5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Md5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameVersionInfo other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.Md5.Length != 0) {
        Md5 = other.Md5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Size = input.ReadInt64();
            break;
          }
          case 34: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///更新平台请求
  /// </summary>
  public sealed partial class LobbyCheckUpdateReq : pb::IMessage<LobbyCheckUpdateReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyCheckUpdateReq> _parser = new pb::MessageParser<LobbyCheckUpdateReq>(() => new LobbyCheckUpdateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyCheckUpdateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateReq(LobbyCheckUpdateReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateReq Clone() {
      return new LobbyCheckUpdateReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyCheckUpdateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyCheckUpdateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyCheckUpdateReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///更新平台应答
  /// </summary>
  public sealed partial class LobbyCheckUpdateAck : pb::IMessage<LobbyCheckUpdateAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyCheckUpdateAck> _parser = new pb::MessageParser<LobbyCheckUpdateAck>(() => new LobbyCheckUpdateAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyCheckUpdateAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateAck(LobbyCheckUpdateAck other) : this() {
      errcode_ = other.errcode_;
      success_ = other.success_;
      version_ = other.version_;
      versionName_ = other.versionName_;
      versionSize_ = other.versionSize_;
      versionMd5_ = other.versionMd5_;
      updateUrl_ = other.updateUrl_;
      updateCnt_ = other.updateCnt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCheckUpdateAck Clone() {
      return new LobbyCheckUpdateAck(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    /// <summary>
    ///0成功 1失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    ///检查结果, true-需要更新 false-不需要更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    ///更新资源版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "version_name" field.</summary>
    public const int VersionNameFieldNumber = 4;
    private string versionName_ = "";
    /// <summary>
    ///更新资源名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionName {
      get { return versionName_; }
      set {
        versionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_size" field.</summary>
    public const int VersionSizeFieldNumber = 5;
    private long versionSize_;
    /// <summary>
    ///更新资源版本大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VersionSize {
      get { return versionSize_; }
      set {
        versionSize_ = value;
      }
    }

    /// <summary>Field number for the "version_md5" field.</summary>
    public const int VersionMd5FieldNumber = 6;
    private string versionMd5_ = "";
    /// <summary>
    ///更新资源校验码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionMd5 {
      get { return versionMd5_; }
      set {
        versionMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_url" field.</summary>
    public const int UpdateUrlFieldNumber = 7;
    private string updateUrl_ = "";
    /// <summary>
    ///更新地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateUrl {
      get { return updateUrl_; }
      set {
        updateUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_cnt" field.</summary>
    public const int UpdateCntFieldNumber = 8;
    private int updateCnt_;
    /// <summary>
    ///更新条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpdateCnt {
      get { return updateCnt_; }
      set {
        updateCnt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyCheckUpdateAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyCheckUpdateAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      if (Success != other.Success) return false;
      if (Version != other.Version) return false;
      if (VersionName != other.VersionName) return false;
      if (VersionSize != other.VersionSize) return false;
      if (VersionMd5 != other.VersionMd5) return false;
      if (UpdateUrl != other.UpdateUrl) return false;
      if (UpdateCnt != other.UpdateCnt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (Success != false) hash ^= Success.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (VersionName.Length != 0) hash ^= VersionName.GetHashCode();
      if (VersionSize != 0L) hash ^= VersionSize.GetHashCode();
      if (VersionMd5.Length != 0) hash ^= VersionMd5.GetHashCode();
      if (UpdateUrl.Length != 0) hash ^= UpdateUrl.GetHashCode();
      if (UpdateCnt != 0) hash ^= UpdateCnt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (VersionName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VersionName);
      }
      if (VersionSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(VersionSize);
      }
      if (VersionMd5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VersionMd5);
      }
      if (UpdateUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UpdateUrl);
      }
      if (UpdateCnt != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UpdateCnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (VersionName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VersionName);
      }
      if (VersionSize != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(VersionSize);
      }
      if (VersionMd5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(VersionMd5);
      }
      if (UpdateUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UpdateUrl);
      }
      if (UpdateCnt != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(UpdateCnt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (VersionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionName);
      }
      if (VersionSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VersionSize);
      }
      if (VersionMd5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionMd5);
      }
      if (UpdateUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdateUrl);
      }
      if (UpdateCnt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpdateCnt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyCheckUpdateAck other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.VersionName.Length != 0) {
        VersionName = other.VersionName;
      }
      if (other.VersionSize != 0L) {
        VersionSize = other.VersionSize;
      }
      if (other.VersionMd5.Length != 0) {
        VersionMd5 = other.VersionMd5;
      }
      if (other.UpdateUrl.Length != 0) {
        UpdateUrl = other.UpdateUrl;
      }
      if (other.UpdateCnt != 0) {
        UpdateCnt = other.UpdateCnt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            VersionName = input.ReadString();
            break;
          }
          case 40: {
            VersionSize = input.ReadInt64();
            break;
          }
          case 50: {
            VersionMd5 = input.ReadString();
            break;
          }
          case 58: {
            UpdateUrl = input.ReadString();
            break;
          }
          case 64: {
            UpdateCnt = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            VersionName = input.ReadString();
            break;
          }
          case 40: {
            VersionSize = input.ReadInt64();
            break;
          }
          case 50: {
            VersionMd5 = input.ReadString();
            break;
          }
          case 58: {
            UpdateUrl = input.ReadString();
            break;
          }
          case 64: {
            UpdateCnt = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///更新游戏请求
  /// </summary>
  public sealed partial class GameCheckUpdateReq : pb::IMessage<GameCheckUpdateReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameCheckUpdateReq> _parser = new pb::MessageParser<GameCheckUpdateReq>(() => new GameCheckUpdateReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameCheckUpdateReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateReq(GameCheckUpdateReq other) : this() {
      kind_ = other.kind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateReq Clone() {
      return new GameCheckUpdateReq(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private string kind_ = "";
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kind {
      get { return kind_; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameCheckUpdateReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameCheckUpdateReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind.Length != 0) hash ^= Kind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameCheckUpdateReq other) {
      if (other == null) {
        return;
      }
      if (other.Kind.Length != 0) {
        Kind = other.Kind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Kind = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///更新平台应答
  /// </summary>
  public sealed partial class GameCheckUpdateAck : pb::IMessage<GameCheckUpdateAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameCheckUpdateAck> _parser = new pb::MessageParser<GameCheckUpdateAck>(() => new GameCheckUpdateAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameCheckUpdateAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateAck(GameCheckUpdateAck other) : this() {
      errcode_ = other.errcode_;
      kind_ = other.kind_;
      name_ = other.name_;
      size_ = other.size_;
      md5_ = other.md5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCheckUpdateAck Clone() {
      return new GameCheckUpdateAck(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    /// <summary>
    ///0成功 1失败
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private int kind_;
    /// <summary>
    ///游戏类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    ///版本名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 4;
    private long size_;
    /// <summary>
    ///版本大小
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "md5" field.</summary>
    public const int Md5FieldNumber = 5;
    private string md5_ = "";
    /// <summary>
    ///校验码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Md5 {
      get { return md5_; }
      set {
        md5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameCheckUpdateAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameCheckUpdateAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      if (Kind != other.Kind) return false;
      if (Name != other.Name) return false;
      if (Size != other.Size) return false;
      if (Md5 != other.Md5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (Kind != 0) hash ^= Kind.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (Md5.Length != 0) hash ^= Md5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Kind);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (Kind != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Kind);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Size != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Size);
      }
      if (Md5.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Md5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (Kind != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Kind);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (Md5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Md5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameCheckUpdateAck other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      if (other.Kind != 0) {
        Kind = other.Kind;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.Md5.Length != 0) {
        Md5 = other.Md5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Kind = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Size = input.ReadInt64();
            break;
          }
          case 42: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            Kind = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 32: {
            Size = input.ReadInt64();
            break;
          }
          case 42: {
            Md5 = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登录平台请求
  /// </summary>
  public sealed partial class LoginReq : pb::IMessage<LoginReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginReq> _parser = new pb::MessageParser<LoginReq>(() => new LoginReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq(LoginReq other) : this() {
      loginType_ = other.loginType_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginReq Clone() {
      return new LoginReq(this);
    }

    /// <summary>Field number for the "login_type" field.</summary>
    public const int LoginTypeFieldNumber = 1;
    private int loginType_;
    /// <summary>
    ///登录方式 0未知 1游客 2手机 3QQ 4微信 5Facebook 6GooglePlay 7GameCenter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LoginType {
      get { return loginType_; }
      set {
        loginType_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    /// <summary>
    ///唯一标识串
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LoginType != other.LoginType) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LoginType != 0) hash ^= LoginType.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LoginType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LoginType);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LoginType != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LoginType);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LoginType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LoginType);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginReq other) {
      if (other == null) {
        return;
      }
      if (other.LoginType != 0) {
        LoginType = other.LoginType;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LoginType = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LoginType = input.ReadInt32();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///登录平台应答
  /// </summary>
  public sealed partial class LoginAck : pb::IMessage<LoginAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginAck> _parser = new pb::MessageParser<LoginAck>(() => new LoginAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAck(LoginAck other) : this() {
      errcode_ = other.errcode_;
      userId_ = other.userId_;
      nickname_ = other.nickname_;
      nicknameMdf_ = other.nicknameMdf_;
      gender_ = other.gender_;
      head_ = other.head_;
      headFrame_ = other.headFrame_;
      level_ = other.level_;
      levelExp_ = other.levelExp_;
      vipLevel_ = other.vipLevel_;
      vipLevelExp_ = other.vipLevelExp_;
      phone_ = other.phone_;
      diamond_ = other.diamond_;
      currency_ = other.currency_;
      items_ = other.items_.Clone();
      serverTimestamp_ = other.serverTimestamp_;
      hasUnreadMail_ = other.hasUnreadMail_;
      monthCardExpireTime_ = other.monthCardExpireTime_;
      monthCardHasFetched_ = other.monthCardHasFetched_;
      clientConfigMd5_ = other.clientConfigMd5_;
      maxGunValue_ = other.maxGunValue_;
      timeString_ = other.timeString_;
      bankPasswordFlag_ = other.bankPasswordFlag_;
      bankCurrency_ = other.bankCurrency_;
      lastGameId_ = other.lastGameId_;
      lastRoomId_ = other.lastRoomId_;
      headUrl_ = other.headUrl_;
      maxStart_ = other.maxStart_;
      agentServerList_ = other.agentServerList_.Clone();
      gameKindList_ = other.gameKindList_.Clone();
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAck Clone() {
      return new LoginAck(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    /// <summary>
    ///0成功 1平台服务器不可用 2账号被封禁 3系统繁忙 4系统错误 5系统暂未开放 6认证失败 7暂不支持的登录方式 8设备注册过多 9IP注册过多 10设备登录账号过多 11IP登录账号过多
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private int userId_;
    /// <summary>
    ///玩家Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 3;
    private string nickname_ = "";
    /// <summary>
    ///昵称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname_mdf" field.</summary>
    public const int NicknameMdfFieldNumber = 4;
    private bool nicknameMdf_;
    /// <summary>
    ///昵称是否修改过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NicknameMdf {
      get { return nicknameMdf_; }
      set {
        nicknameMdf_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private int gender_;
    /// <summary>
    ///性别 0保密 1男 2女
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "head" field.</summary>
    public const int HeadFieldNumber = 6;
    private int head_;
    /// <summary>
    ///头像Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Head {
      get { return head_; }
      set {
        head_ = value;
      }
    }

    /// <summary>Field number for the "head_frame" field.</summary>
    public const int HeadFrameFieldNumber = 7;
    private int headFrame_;
    /// <summary>
    ///头像框Id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HeadFrame {
      get { return headFrame_; }
      set {
        headFrame_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 8;
    private int level_;
    /// <summary>
    ///玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "level_exp" field.</summary>
    public const int LevelExpFieldNumber = 9;
    private long levelExp_;
    /// <summary>
    ///等级经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LevelExp {
      get { return levelExp_; }
      set {
        levelExp_ = value;
      }
    }

    /// <summary>Field number for the "vip_level" field.</summary>
    public const int VipLevelFieldNumber = 10;
    private int vipLevel_;
    /// <summary>
    ///vip等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VipLevel {
      get { return vipLevel_; }
      set {
        vipLevel_ = value;
      }
    }

    /// <summary>Field number for the "vip_level_exp" field.</summary>
    public const int VipLevelExpFieldNumber = 11;
    private long vipLevelExp_;
    /// <summary>
    ///vip等级经验
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VipLevelExp {
      get { return vipLevelExp_; }
      set {
        vipLevelExp_ = value;
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 12;
    private string phone_ = "";
    /// <summary>
    ///手机号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "diamond" field.</summary>
    public const int DiamondFieldNumber = 13;
    private long diamond_;
    /// <summary>
    ///钻石
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Diamond {
      get { return diamond_; }
      set {
        diamond_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 14;
    private long currency_;
    /// <summary>
    ///平台货币
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Currency {
      get { return currency_; }
      set {
        currency_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::CLGT.ItemInfo> _repeated_items_codec
        = pb::FieldCodec.ForMessage(138, global::CLGT.ItemInfo.Parser);
    private readonly pbc::RepeatedField<global::CLGT.ItemInfo> items_ = new pbc::RepeatedField<global::CLGT.ItemInfo>();
    /// <summary>
    ///物品数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::CLGT.ItemInfo> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "server_timestamp" field.</summary>
    public const int ServerTimestampFieldNumber = 18;
    private uint serverTimestamp_;
    /// <summary>
    ///服务器时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerTimestamp {
      get { return serverTimestamp_; }
      set {
        serverTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "has_unread_mail" field.</summary>
    public const int HasUnreadMailFieldNumber = 20;
    private bool hasUnreadMail_;
    /// <summary>
    ///是否有未读邮件
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUnreadMail {
      get { return hasUnreadMail_; }
      set {
        hasUnreadMail_ = value;
      }
    }

    /// <summary>Field number for the "month_card_expire_time" field.</summary>
    public const int MonthCardExpireTimeFieldNumber = 23;
    private uint monthCardExpireTime_;
    /// <summary>
    ///月卡过期时间戳
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MonthCardExpireTime {
      get { return monthCardExpireTime_; }
      set {
        monthCardExpireTime_ = value;
      }
    }

    /// <summary>Field number for the "month_card_has_fetched" field.</summary>
    public const int MonthCardHasFetchedFieldNumber = 24;
    private bool monthCardHasFetched_;
    /// <summary>
    ///月卡当天奖励是否已领取过
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MonthCardHasFetched {
      get { return monthCardHasFetched_; }
      set {
        monthCardHasFetched_ = value;
      }
    }

    /// <summary>Field number for the "client_config_md5" field.</summary>
    public const int ClientConfigMd5FieldNumber = 28;
    private string clientConfigMd5_ = "";
    /// <summary>
    ///最新客户端配置表的md5
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientConfigMd5 {
      get { return clientConfigMd5_; }
      set {
        clientConfigMd5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_gun_value" field.</summary>
    public const int MaxGunValueFieldNumber = 29;
    private long maxGunValue_;
    /// <summary>
    ///最大解锁炮倍
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxGunValue {
      get { return maxGunValue_; }
      set {
        maxGunValue_ = value;
      }
    }

    /// <summary>Field number for the "time_string" field.</summary>
    public const int TimeStringFieldNumber = 30;
    private string timeString_ = "";
    /// <summary>
    ///账号解封时间或系统开放时间，空串代表永久
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TimeString {
      get { return timeString_; }
      set {
        timeString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bank_password_flag" field.</summary>
    public const int BankPasswordFlagFieldNumber = 31;
    private bool bankPasswordFlag_;
    /// <summary>
    ///是否已设置金库密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BankPasswordFlag {
      get { return bankPasswordFlag_; }
      set {
        bankPasswordFlag_ = value;
      }
    }

    /// <summary>Field number for the "bank_currency" field.</summary>
    public const int BankCurrencyFieldNumber = 41;
    private long bankCurrency_;
    /// <summary>
    ///银行金币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BankCurrency {
      get { return bankCurrency_; }
      set {
        bankCurrency_ = value;
      }
    }

    /// <summary>Field number for the "last_game_id" field.</summary>
    public const int LastGameIdFieldNumber = 42;
    private int lastGameId_;
    /// <summary>
    ///上次参与未结束的游戏Id，客户端根据此字段判断启动哪个客户端子游戏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastGameId {
      get { return lastGameId_; }
      set {
        lastGameId_ = value;
      }
    }

    /// <summary>Field number for the "last_room_id" field.</summary>
    public const int LastRoomIdFieldNumber = 43;
    private int lastRoomId_;
    /// <summary>
    ///上次参与未结束的房间Id，客户端根据此字段判断启动哪个客户端子游戏
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastRoomId {
      get { return lastRoomId_; }
      set {
        lastRoomId_ = value;
      }
    }

    /// <summary>Field number for the "head_url" field.</summary>
    public const int HeadUrlFieldNumber = 44;
    private string headUrl_ = "";
    /// <summary>
    ///头像url地址
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeadUrl {
      get { return headUrl_; }
      set {
        headUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_start" field.</summary>
    public const int MaxStartFieldNumber = 45;
    private int maxStart_;
    /// <summary>
    ///连接条数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStart {
      get { return maxStart_; }
      set {
        maxStart_ = value;
      }
    }

    /// <summary>Field number for the "agent_server_list" field.</summary>
    public const int AgentServerListFieldNumber = 46;
    private static readonly pb::FieldCodec<string> _repeated_agentServerList_codec
        = pb::FieldCodec.ForString(370);
    private readonly pbc::RepeatedField<string> agentServerList_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///代理数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AgentServerList {
      get { return agentServerList_; }
    }

    /// <summary>Field number for the "game_kind_list" field.</summary>
    public const int GameKindListFieldNumber = 47;
    private static readonly pb::FieldCodec<int> _repeated_gameKindList_codec
        = pb::FieldCodec.ForInt32(378);
    private readonly pbc::RepeatedField<int> gameKindList_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///游戏类型数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> GameKindList {
      get { return gameKindList_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 48;
    private bool state_;
    /// <summary>
    ///审核模式, true-审核模式, false-正常模式, 审核模式,客户端屏蔽部分功能,用于审核
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      if (UserId != other.UserId) return false;
      if (Nickname != other.Nickname) return false;
      if (NicknameMdf != other.NicknameMdf) return false;
      if (Gender != other.Gender) return false;
      if (Head != other.Head) return false;
      if (HeadFrame != other.HeadFrame) return false;
      if (Level != other.Level) return false;
      if (LevelExp != other.LevelExp) return false;
      if (VipLevel != other.VipLevel) return false;
      if (VipLevelExp != other.VipLevelExp) return false;
      if (Phone != other.Phone) return false;
      if (Diamond != other.Diamond) return false;
      if (Currency != other.Currency) return false;
      if(!items_.Equals(other.items_)) return false;
      if (ServerTimestamp != other.ServerTimestamp) return false;
      if (HasUnreadMail != other.HasUnreadMail) return false;
      if (MonthCardExpireTime != other.MonthCardExpireTime) return false;
      if (MonthCardHasFetched != other.MonthCardHasFetched) return false;
      if (ClientConfigMd5 != other.ClientConfigMd5) return false;
      if (MaxGunValue != other.MaxGunValue) return false;
      if (TimeString != other.TimeString) return false;
      if (BankPasswordFlag != other.BankPasswordFlag) return false;
      if (BankCurrency != other.BankCurrency) return false;
      if (LastGameId != other.LastGameId) return false;
      if (LastRoomId != other.LastRoomId) return false;
      if (HeadUrl != other.HeadUrl) return false;
      if (MaxStart != other.MaxStart) return false;
      if(!agentServerList_.Equals(other.agentServerList_)) return false;
      if(!gameKindList_.Equals(other.gameKindList_)) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (UserId != 0) hash ^= UserId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (NicknameMdf != false) hash ^= NicknameMdf.GetHashCode();
      if (Gender != 0) hash ^= Gender.GetHashCode();
      if (Head != 0) hash ^= Head.GetHashCode();
      if (HeadFrame != 0) hash ^= HeadFrame.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (LevelExp != 0L) hash ^= LevelExp.GetHashCode();
      if (VipLevel != 0) hash ^= VipLevel.GetHashCode();
      if (VipLevelExp != 0L) hash ^= VipLevelExp.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Diamond != 0L) hash ^= Diamond.GetHashCode();
      if (Currency != 0L) hash ^= Currency.GetHashCode();
      hash ^= items_.GetHashCode();
      if (ServerTimestamp != 0) hash ^= ServerTimestamp.GetHashCode();
      if (HasUnreadMail != false) hash ^= HasUnreadMail.GetHashCode();
      if (MonthCardExpireTime != 0) hash ^= MonthCardExpireTime.GetHashCode();
      if (MonthCardHasFetched != false) hash ^= MonthCardHasFetched.GetHashCode();
      if (ClientConfigMd5.Length != 0) hash ^= ClientConfigMd5.GetHashCode();
      if (MaxGunValue != 0L) hash ^= MaxGunValue.GetHashCode();
      if (TimeString.Length != 0) hash ^= TimeString.GetHashCode();
      if (BankPasswordFlag != false) hash ^= BankPasswordFlag.GetHashCode();
      if (BankCurrency != 0L) hash ^= BankCurrency.GetHashCode();
      if (LastGameId != 0) hash ^= LastGameId.GetHashCode();
      if (LastRoomId != 0) hash ^= LastRoomId.GetHashCode();
      if (HeadUrl.Length != 0) hash ^= HeadUrl.GetHashCode();
      if (MaxStart != 0) hash ^= MaxStart.GetHashCode();
      hash ^= agentServerList_.GetHashCode();
      hash ^= gameKindList_.GetHashCode();
      if (State != false) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (NicknameMdf != false) {
        output.WriteRawTag(32);
        output.WriteBool(NicknameMdf);
      }
      if (Gender != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Gender);
      }
      if (Head != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Head);
      }
      if (HeadFrame != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HeadFrame);
      }
      if (Level != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Level);
      }
      if (LevelExp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(LevelExp);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(VipLevel);
      }
      if (VipLevelExp != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VipLevelExp);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Phone);
      }
      if (Diamond != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Diamond);
      }
      if (Currency != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Currency);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (ServerTimestamp != 0) {
        output.WriteRawTag(149, 1);
        output.WriteFixed32(ServerTimestamp);
      }
      if (HasUnreadMail != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(HasUnreadMail);
      }
      if (MonthCardExpireTime != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(MonthCardExpireTime);
      }
      if (MonthCardHasFetched != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(MonthCardHasFetched);
      }
      if (ClientConfigMd5.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ClientConfigMd5);
      }
      if (MaxGunValue != 0L) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(MaxGunValue);
      }
      if (TimeString.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(TimeString);
      }
      if (BankPasswordFlag != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(BankPasswordFlag);
      }
      if (BankCurrency != 0L) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(BankCurrency);
      }
      if (LastGameId != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(LastGameId);
      }
      if (LastRoomId != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(LastRoomId);
      }
      if (HeadUrl.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(HeadUrl);
      }
      if (MaxStart != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(MaxStart);
      }
      agentServerList_.WriteTo(output, _repeated_agentServerList_codec);
      gameKindList_.WriteTo(output, _repeated_gameKindList_codec);
      if (State != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (UserId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nickname);
      }
      if (NicknameMdf != false) {
        output.WriteRawTag(32);
        output.WriteBool(NicknameMdf);
      }
      if (Gender != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Gender);
      }
      if (Head != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Head);
      }
      if (HeadFrame != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(HeadFrame);
      }
      if (Level != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Level);
      }
      if (LevelExp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(LevelExp);
      }
      if (VipLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(VipLevel);
      }
      if (VipLevelExp != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(VipLevelExp);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Phone);
      }
      if (Diamond != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(Diamond);
      }
      if (Currency != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(Currency);
      }
      items_.WriteTo(ref output, _repeated_items_codec);
      if (ServerTimestamp != 0) {
        output.WriteRawTag(149, 1);
        output.WriteFixed32(ServerTimestamp);
      }
      if (HasUnreadMail != false) {
        output.WriteRawTag(160, 1);
        output.WriteBool(HasUnreadMail);
      }
      if (MonthCardExpireTime != 0) {
        output.WriteRawTag(184, 1);
        output.WriteUInt32(MonthCardExpireTime);
      }
      if (MonthCardHasFetched != false) {
        output.WriteRawTag(192, 1);
        output.WriteBool(MonthCardHasFetched);
      }
      if (ClientConfigMd5.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(ClientConfigMd5);
      }
      if (MaxGunValue != 0L) {
        output.WriteRawTag(232, 1);
        output.WriteInt64(MaxGunValue);
      }
      if (TimeString.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(TimeString);
      }
      if (BankPasswordFlag != false) {
        output.WriteRawTag(248, 1);
        output.WriteBool(BankPasswordFlag);
      }
      if (BankCurrency != 0L) {
        output.WriteRawTag(200, 2);
        output.WriteInt64(BankCurrency);
      }
      if (LastGameId != 0) {
        output.WriteRawTag(208, 2);
        output.WriteInt32(LastGameId);
      }
      if (LastRoomId != 0) {
        output.WriteRawTag(216, 2);
        output.WriteInt32(LastRoomId);
      }
      if (HeadUrl.Length != 0) {
        output.WriteRawTag(226, 2);
        output.WriteString(HeadUrl);
      }
      if (MaxStart != 0) {
        output.WriteRawTag(232, 2);
        output.WriteInt32(MaxStart);
      }
      agentServerList_.WriteTo(ref output, _repeated_agentServerList_codec);
      gameKindList_.WriteTo(ref output, _repeated_gameKindList_codec);
      if (State != false) {
        output.WriteRawTag(128, 3);
        output.WriteBool(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (UserId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UserId);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (NicknameMdf != false) {
        size += 1 + 1;
      }
      if (Gender != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gender);
      }
      if (Head != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Head);
      }
      if (HeadFrame != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HeadFrame);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (LevelExp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LevelExp);
      }
      if (VipLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VipLevel);
      }
      if (VipLevelExp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VipLevelExp);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Diamond != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Diamond);
      }
      if (Currency != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Currency);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (ServerTimestamp != 0) {
        size += 2 + 4;
      }
      if (HasUnreadMail != false) {
        size += 2 + 1;
      }
      if (MonthCardExpireTime != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MonthCardExpireTime);
      }
      if (MonthCardHasFetched != false) {
        size += 2 + 1;
      }
      if (ClientConfigMd5.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ClientConfigMd5);
      }
      if (MaxGunValue != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(MaxGunValue);
      }
      if (TimeString.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TimeString);
      }
      if (BankPasswordFlag != false) {
        size += 2 + 1;
      }
      if (BankCurrency != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(BankCurrency);
      }
      if (LastGameId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastGameId);
      }
      if (LastRoomId != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(LastRoomId);
      }
      if (HeadUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeadUrl);
      }
      if (MaxStart != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(MaxStart);
      }
      size += agentServerList_.CalculateSize(_repeated_agentServerList_codec);
      size += gameKindList_.CalculateSize(_repeated_gameKindList_codec);
      if (State != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginAck other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      if (other.UserId != 0) {
        UserId = other.UserId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.NicknameMdf != false) {
        NicknameMdf = other.NicknameMdf;
      }
      if (other.Gender != 0) {
        Gender = other.Gender;
      }
      if (other.Head != 0) {
        Head = other.Head;
      }
      if (other.HeadFrame != 0) {
        HeadFrame = other.HeadFrame;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.LevelExp != 0L) {
        LevelExp = other.LevelExp;
      }
      if (other.VipLevel != 0) {
        VipLevel = other.VipLevel;
      }
      if (other.VipLevelExp != 0L) {
        VipLevelExp = other.VipLevelExp;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Diamond != 0L) {
        Diamond = other.Diamond;
      }
      if (other.Currency != 0L) {
        Currency = other.Currency;
      }
      items_.Add(other.items_);
      if (other.ServerTimestamp != 0) {
        ServerTimestamp = other.ServerTimestamp;
      }
      if (other.HasUnreadMail != false) {
        HasUnreadMail = other.HasUnreadMail;
      }
      if (other.MonthCardExpireTime != 0) {
        MonthCardExpireTime = other.MonthCardExpireTime;
      }
      if (other.MonthCardHasFetched != false) {
        MonthCardHasFetched = other.MonthCardHasFetched;
      }
      if (other.ClientConfigMd5.Length != 0) {
        ClientConfigMd5 = other.ClientConfigMd5;
      }
      if (other.MaxGunValue != 0L) {
        MaxGunValue = other.MaxGunValue;
      }
      if (other.TimeString.Length != 0) {
        TimeString = other.TimeString;
      }
      if (other.BankPasswordFlag != false) {
        BankPasswordFlag = other.BankPasswordFlag;
      }
      if (other.BankCurrency != 0L) {
        BankCurrency = other.BankCurrency;
      }
      if (other.LastGameId != 0) {
        LastGameId = other.LastGameId;
      }
      if (other.LastRoomId != 0) {
        LastRoomId = other.LastRoomId;
      }
      if (other.HeadUrl.Length != 0) {
        HeadUrl = other.HeadUrl;
      }
      if (other.MaxStart != 0) {
        MaxStart = other.MaxStart;
      }
      agentServerList_.Add(other.agentServerList_);
      gameKindList_.Add(other.gameKindList_);
      if (other.State != false) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 32: {
            NicknameMdf = input.ReadBool();
            break;
          }
          case 40: {
            Gender = input.ReadInt32();
            break;
          }
          case 48: {
            Head = input.ReadInt32();
            break;
          }
          case 56: {
            HeadFrame = input.ReadInt32();
            break;
          }
          case 64: {
            Level = input.ReadInt32();
            break;
          }
          case 72: {
            LevelExp = input.ReadInt64();
            break;
          }
          case 80: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 88: {
            VipLevelExp = input.ReadInt64();
            break;
          }
          case 98: {
            Phone = input.ReadString();
            break;
          }
          case 104: {
            Diamond = input.ReadInt64();
            break;
          }
          case 112: {
            Currency = input.ReadInt64();
            break;
          }
          case 138: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 149: {
            ServerTimestamp = input.ReadFixed32();
            break;
          }
          case 160: {
            HasUnreadMail = input.ReadBool();
            break;
          }
          case 184: {
            MonthCardExpireTime = input.ReadUInt32();
            break;
          }
          case 192: {
            MonthCardHasFetched = input.ReadBool();
            break;
          }
          case 226: {
            ClientConfigMd5 = input.ReadString();
            break;
          }
          case 232: {
            MaxGunValue = input.ReadInt64();
            break;
          }
          case 242: {
            TimeString = input.ReadString();
            break;
          }
          case 248: {
            BankPasswordFlag = input.ReadBool();
            break;
          }
          case 328: {
            BankCurrency = input.ReadInt64();
            break;
          }
          case 336: {
            LastGameId = input.ReadInt32();
            break;
          }
          case 344: {
            LastRoomId = input.ReadInt32();
            break;
          }
          case 354: {
            HeadUrl = input.ReadString();
            break;
          }
          case 360: {
            MaxStart = input.ReadInt32();
            break;
          }
          case 370: {
            agentServerList_.AddEntriesFrom(input, _repeated_agentServerList_codec);
            break;
          }
          case 378:
          case 376: {
            gameKindList_.AddEntriesFrom(input, _repeated_gameKindList_codec);
            break;
          }
          case 384: {
            State = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
          case 16: {
            UserId = input.ReadInt32();
            break;
          }
          case 26: {
            Nickname = input.ReadString();
            break;
          }
          case 32: {
            NicknameMdf = input.ReadBool();
            break;
          }
          case 40: {
            Gender = input.ReadInt32();
            break;
          }
          case 48: {
            Head = input.ReadInt32();
            break;
          }
          case 56: {
            HeadFrame = input.ReadInt32();
            break;
          }
          case 64: {
            Level = input.ReadInt32();
            break;
          }
          case 72: {
            LevelExp = input.ReadInt64();
            break;
          }
          case 80: {
            VipLevel = input.ReadInt32();
            break;
          }
          case 88: {
            VipLevelExp = input.ReadInt64();
            break;
          }
          case 98: {
            Phone = input.ReadString();
            break;
          }
          case 104: {
            Diamond = input.ReadInt64();
            break;
          }
          case 112: {
            Currency = input.ReadInt64();
            break;
          }
          case 138: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 149: {
            ServerTimestamp = input.ReadFixed32();
            break;
          }
          case 160: {
            HasUnreadMail = input.ReadBool();
            break;
          }
          case 184: {
            MonthCardExpireTime = input.ReadUInt32();
            break;
          }
          case 192: {
            MonthCardHasFetched = input.ReadBool();
            break;
          }
          case 226: {
            ClientConfigMd5 = input.ReadString();
            break;
          }
          case 232: {
            MaxGunValue = input.ReadInt64();
            break;
          }
          case 242: {
            TimeString = input.ReadString();
            break;
          }
          case 248: {
            BankPasswordFlag = input.ReadBool();
            break;
          }
          case 328: {
            BankCurrency = input.ReadInt64();
            break;
          }
          case 336: {
            LastGameId = input.ReadInt32();
            break;
          }
          case 344: {
            LastRoomId = input.ReadInt32();
            break;
          }
          case 354: {
            HeadUrl = input.ReadString();
            break;
          }
          case 360: {
            MaxStart = input.ReadInt32();
            break;
          }
          case 370: {
            agentServerList_.AddEntriesFrom(ref input, _repeated_agentServerList_codec);
            break;
          }
          case 378:
          case 376: {
            gameKindList_.AddEntriesFrom(ref input, _repeated_gameKindList_codec);
            break;
          }
          case 384: {
            State = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///心跳包请求，客户端应当每间隔10秒发一个心跳包，证明你还活着
  /// </summary>
  public sealed partial class KeepAliveReq : pb::IMessage<KeepAliveReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeepAliveReq> _parser = new pb::MessageParser<KeepAliveReq>(() => new KeepAliveReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReq(KeepAliveReq other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReq Clone() {
      return new KeepAliveReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveReq other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///心跳包回应
  /// </summary>
  public sealed partial class KeepAliveAck : pb::IMessage<KeepAliveAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeepAliveAck> _parser = new pb::MessageParser<KeepAliveAck>(() => new KeepAliveAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveAck(KeepAliveAck other) : this() {
      errcode_ = other.errcode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveAck Clone() {
      return new KeepAliveAck(this);
    }

    /// <summary>Field number for the "errcode" field.</summary>
    public const int ErrcodeFieldNumber = 1;
    private int errcode_;
    /// <summary>
    ///0成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errcode {
      get { return errcode_; }
      set {
        errcode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errcode != other.Errcode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errcode != 0) hash ^= Errcode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errcode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errcode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errcode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errcode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveAck other) {
      if (other == null) {
        return;
      }
      if (other.Errcode != 0) {
        Errcode = other.Errcode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errcode = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///请求网络掉线
  /// </summary>
  public sealed partial class TestNetInterruptRpt : pb::IMessage<TestNetInterruptRpt>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestNetInterruptRpt> _parser = new pb::MessageParser<TestNetInterruptRpt>(() => new TestNetInterruptRpt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TestNetInterruptRpt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CLGT.CLGTReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestNetInterruptRpt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestNetInterruptRpt(TestNetInterruptRpt other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestNetInterruptRpt Clone() {
      return new TestNetInterruptRpt(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TestNetInterruptRpt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TestNetInterruptRpt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TestNetInterruptRpt other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
